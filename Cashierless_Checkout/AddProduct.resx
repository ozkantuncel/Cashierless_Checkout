<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnGnrcBrcode.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAA4BJREFUaEPt
        V01IVFEYfVrhQtoVzjwtsCyE/jSi/Gm0MCNoEbUIbFOLiNIZ2iVEkJugKGgVtJB2QbUJo2jVTkuwJIj8
        QUqksmwS2ht83fs8c3tz77t89y5yIubAYTjnnXu+e2euowZllFFGGV7INVBVLkVncml6nk3TgiAJLvWl
        aUq8Dgo/g+i/B7Hxo9kUfcGm7Qzp6cWQNkZraqkuWlxq9IXUn7hZG0OaF3wheBMVpYO8Mgmb/CWuzYh4
        HRSfyj1cIT1D4kpdRk1pcL6OasW7+DO+qb4UPUm6GkmfkshewOPSQLz714s2laIHAwFV4rFCtobqxfOx
        oqxgLqQeREoBqhCb+Ko2JO71pXW0Fg8TITLtgo9Efkmu6U3TETxaefTWUYPavKC459fwiEVvSBuiT6+G
        dsBaeYg73V10gJCO4dHfR2Y6T3HCZn3ISB++u0j1wbBi29lZ6zpX3xm2As6HjHT3s0XaXPFSHaCla8a6
        zua3j32jPXc+Kt8Z8VJJ2KwPuawn8tRU9VYdYFv1a8pMJq8rUHry/jf1T1Pj3nGqXzVCja3jKu+MpGIJ
        zodU+mDLnDqAZFvP8jVCLLFP/Lzcj69pvjKj8s5IKpbgfEilDz3+QVsrR9VmNgUj1H56NrGv431e/p64
        Kn/gC/mG1Cjtf/e9dAeQ7DrxWW2oQLHRIfFb9uSB2/PUcUPw1Bxtr36jvrGiXMVwdP/jvc6IbyBewPmQ
        RbkOee93fyg+QHyjFn9XdtKY44z4BuIFnA9p5DJTeeo8Pqe+lZgDTDQP/PnGkkStO+KL4wWcD2keAOx8
        uED7dk7LKxT9XxDf/JbVr+Tmz50LaI2+DrXusBVwPqT1AAXKjPhTYX3brU8k2To0H31K0WKBpLwXbAWc
        D+l0AAlf3xm2As6HNHI6EfOe4wxbAedDGjmdiHnPcYatgPMhjZxOxLznOMNWwPmQRk4nYt5znGEr4HxI
        I6cTMe85zrAVcD6kkdOJmPccZ9gKOB/SyOlEzHuOM2wFnA9p5HQi5j3HGbYCzoc0cjoR857jDFsB50Ma
        OZ2Iec9xhq2A8yGNnE7EvOc4w1bA+ZBGTidi3nOcYSvgfEgjpxMx7znOsBVwPqSR04mY9xxn2Ao4H9LI
        6UTMe44zbAWcD2nkdCLmPccZtgLOhzRyOhHznuMMWwHnQxo5nYh5zymjjDL+KwTBb64OrCmeRrR5AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>